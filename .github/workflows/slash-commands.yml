name: Slash Command CI

on:
  issue_comment:
  pull_request_review_comment:
    types:
      - created

jobs:
  check_comments:
    runs-on: ubuntu-latest
    name: Check comments for /format
    steps:
      - name: Check for Command
        id: command
        uses: xt0rted/slash-command-action@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          command: format
          reaction: "true"
          reaction-type: "eyes"
          allow-edits: "false"
          permission-level: admin
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Install GitHub CLI
        run: |
          URL=https://github.com/cli/cli/releases/download/v0.11.1/gh_0.11.1_linux_arm64.deb
          TEMP_DEB="$(mktemp)"
          wget -O "$TEMP_DEB" "$URL"
          sudo dpkg -i "$TEMP_DEB"
          rm -f "$TEMP_DEB"
      - name: Clone git repo
        uses: actions/checkout@v2
        # with:
        #   ref: ${{ steps.upstreambranch.outputs.branchname }}
      - name: Checkout Pull Request
        run: |
          echo "Checking out from PR URL: ${{ github.event.issue.pull_request.url }}"
          gh checkout ${{ github.event.issue.pull_request.url }}
      # - name: get upstream branch
      #   id: upstreambranch
      #   run: |
      #     echo "::set-output name=branchname::$(curl -v -H "Accept: application/vnd.github.sailor-v-preview+json" -u ${{ secrets.PAT }} ${{ github.event.issue.pull_request.url }} | jq '.head.ref' | sed 's/\"//g')"
      # - name: echo upstream branch
      #   run: |
      #     echo ${{ steps.upstreambranch.outputs.branchname }}
      - name: Echo command (debug)
        run: echo "The command was '${{ steps.command.outputs.command-name }}' with arguments '${{ steps.command.outputs.command-arguments }}', running against branch '${{ github.event.pull_request.head.sha }}'"
      - name: Configure Git Agent
        run: |
          git config --global user.email "aj.steers@slalom.com"
          git config --global user.name "AJ Steers (CI bot)"
      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.0
      - run: terraform fmt -recursive
      - run: git commit -a -m "GitOps Bot (Autoformat)"
      - run: git push
